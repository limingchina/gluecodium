package test

enum Error {
    // Generic internal error.
    INTERNAL = 1,
    // An invalid input parameter.
    INVALID_PARAMETER
}

// Test class for cross references of enum values with under score. Some cases don't work.
class TestClassEnumValueWithUnderScore {

    // Note:a [Error.INVALID_PARAMETER] error is generated.
    fun foo_good_case()

    // Note:* [Error.INVALID_PARAMETER] error is generated.
    fun foo_star_bad_case1()

    // *Note: [Error.INVALID_PARAMETER] error is generated.
    fun foo_star_bad_case2()

    // This is a test
    //
    // *Note: [Error.INVALID_PARAMETER] is generated.
    fun foo_sentence_with_a_new_line_good_case()

    // This is a tes
    //
    // *Note: [Error.INVALID_PARAMETER] is generated.
    fun foo_shorter_sentence_with_a_new_line_bad_case()
}

// Test class for cross reference of enum values without under score. Always working.
class TestClassEnumValueWithoutUnderScore {
    # When enum values don't contain underscores, they always work

    // Note:a [Error.INTERNAL] error is generated.
    fun foo_good_case()

    // *Note: [Error.INTERNAL] error is generated.
    fun foo_star_good_case1()

    // Note:* [Error.INTERNAL] error is generated.
    fun foo_star_good_case2()

    // This is a test
    //
    // **Note:** [Error.INTERNAL] is generated.
    fun foo_sentence_with_a_new_line_good_case()

    // This is a tes
    //
    // **Note:** [Error.INTERNAL] is generated.
    fun foo_shorter_sentence_with_a_new_line_good_case()
}
